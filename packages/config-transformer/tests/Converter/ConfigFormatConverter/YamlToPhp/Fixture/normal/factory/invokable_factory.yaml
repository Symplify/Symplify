services:
    Symplify\ConfigTransformer\Tests\Converter\ConfigFormatConverter\Source\InvokableFactory: ~
    Foo:
        class: Symplify\ConfigTransformer\Tests\Converter\ConfigFormatConverter\Source\ExistingClass
        factory: '@Symplify\ConfigTransformer\Tests\Converter\ConfigFormatConverter\Source\InvokableFactory'
-----
<?php

declare(strict_types=1);

use Symfony\Component\DependencyInjection\Loader\Configurator\ContainerConfigurator;
use Symplify\ConfigTransformer\Tests\Converter\ConfigFormatConverter\Source\ExistingClass;
use Symplify\ConfigTransformer\Tests\Converter\ConfigFormatConverter\Source\InvokableFactory;
use function Symfony\Component\DependencyInjection\Loader\Configurator\service;

return static function (ContainerConfigurator $containerConfigurator): void {
    $services = $containerConfigurator->services();

    $services->set(InvokableFactory::class);

    $services->set('Foo', ExistingClass::class)
        ->factory(service(InvokableFactory::class));
};
