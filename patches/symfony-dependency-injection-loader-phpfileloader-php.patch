--- /dev/null
+++ ../Loader/PhpFileLoader.php
@@ -22,6 +22,7 @@
 use Symfony\Component\DependencyInjection\Extension\ConfigurationExtensionInterface;
 use Symfony\Component\DependencyInjection\Extension\ExtensionInterface;
 use Symfony\Component\DependencyInjection\Loader\Configurator\ContainerConfigurator;
+use Symplify\EasyCodingStandard\Config\ECSConfig;
 
 /**
  * PhpFileLoader loads service definitions from a PHP file.
@@ -64,7 +65,7 @@
             $callback = $load($path, $this->env);
 
             if (\is_object($callback) && \is_callable($callback)) {
-                $this->executeCallback($callback, new ContainerConfigurator($this->container, $this, $this->instanceof, $path, $resource, $this->env), $path);
+                $this->executeCallback($callback, new ECSConfig($this->container, $this, $this->instanceof, $path, $resource, $this->env), $path);
             }
         } finally {
             $this->instanceof = [];
@@ -122,6 +123,9 @@
             $type = $reflectionType->getName();
 
             switch ($type) {
+                case ECSConfig::class:
+                    $arguments[] = $containerConfigurator;
+                    break;
                 case ContainerConfigurator::class:
                     $arguments[] = $containerConfigurator;
                     break;
