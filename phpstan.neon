includes:
    - vendor/symplify/phpstan-rules/config/symplify-rules.neon

    # for cognitive rules
    - vendor/symplify/phpstan-rules/config/packages/cognitive-complexity/cognitive-complexity-services.neon

parameters:
    level: 8

    reportUnmatchedIgnoredErrors: false

    type_coverage:
        return_type: 99
        param_type: 99
        property_type: 99

    cognitive_complexity:
        class: 25
        function: 8

    unused_public:
        properties: true
        constants: true
        methods: true

    # requires exact closure types
    checkMissingCallableSignature: true

    parallel:
        # to prevent full thread lagging pc
        maximumNumberOfProcesses: 15

    paths:
        - packages
        - ecs.php
        - rector.php

    excludePaths:
        - */scoper.php

        - packages/*-phpstan-compiler/tests/*ToPhpCompiler/Fixture*

        # tests

        - '*/tests/**/Source/*'
        - '*/tests/**/Fixture/*'
        - */stubs/*
        - */packages-tests/**/Fixture/*
        - */packages-tests/**/Source/*

    bootstrapFiles:
        - tests/bootstrap.php
        # load functions like service() etc.
        - vendor/symfony/dependency-injection/Loader/Configurator/ContainerConfigurator.php

    ignoreErrors:
        # required for autowiring, since only interface is autowired
        - '#Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getParameterBag\(\)#'

        # phpstan 0.10 news
        - '#Parameter \#1 \$path of function dirname expects string, string\|false given#'

        - '#Parameter \#1 \$endPath of method Symfony\\Component\\Filesystem\\Filesystem\:\:makePathRelative\(\) expects string, string\|false given#'

        -
            message: '#Use value object over return of values#'
            paths:
                # direct string printer
                - packages/rule-doc-generator/src/Printer/CodeSamplePrinter/BadGoodCodeSamplePrinter.php

        # child type

        # nesting
        - '#Parameter \#1 \$items of class PhpParser\\Node\\Expr\\Array_ constructor expects array<PhpParser\\Node\\Expr\\ArrayItem\|null\>, array<PhpParser\\Node\\Arg\> given#'

        - '#Parameter (.*?) class ReflectionClass constructor expects class\-string<T of object\>\|T of object, string given#'

        -
            message: '#Array with keys is not allowed\. Use value object to pass data instead#'
            path: packages/php-config-printer/src/Printer/SmartPhpConfigPrinter.php

        -
            message: '#Function "method_exists\(\)" cannot be used/left in the code#'
            paths:
                # PHPUnit 9/10 compat
                - packages/php-config-printer/src/NodeFactory/ConstantNodeFactory.php

        -
            message: '#Class cognitive complexity is \d+, keep it under \d+#'
            paths:
                 # traversing is complex operatoin
                 - packages/php-config-printer/src/NodeFactory/ArgsNodeFactory.php

        - '#Method Symplify\\EasyTesting\\DataProvider\\StaticFixtureFinder\:\:yieldDirectoryExclusively\(\) should return Iterator<mixed, Symplify\\SmartFileSystem\\SmartFileInfo\> but returns Iterator<mixed, array<int, Symplify\\SmartFileSystem\\SmartFileInfo\>\>#'

        -
            message: '#cognitive complexity is \d+, keep it under \d+#i'
            paths:
                - packages/php-config-printer/src/PhpParser/NodeFactory/ConfiguratorClosureNodeFactory.php

        -
            message: '#Instead of abstract class, use specific service with composition#'
            paths:
                 - packages/rule-doc-generator-contracts/src/ValueObject/AbstractCodeSample.php

        # is never string
        - '#"@file_get_contents\(\$fileName\)" is forbidden to use#'

        # not useful
        - '#Parameter \#2 \$length of function array_chunk expects int<1, max\>, int given#'

        # nesting on purpose
        -
            message: '#New objects with "\$methodCall" name are overridden\. This can lead to unwanted bugs, please pick a different name to avoid it#'
            paths:
                - packages/php-config-printer/src/*Converter/*

        # test case
        - '#Calling PHPStan\\Testing\\ErrorFormatterTestCase\:\:get(.*?)\(\) is not covered by backward compatibility promise\. The method might change in a minor PHPStan version#'
        - '#Extending PHPStan\\Testing\\ErrorFormatterTestCase is not covered by backward compatibility promise\. The class might change in a minor PHPStan version#'

        # narrowed to generic type
        - '#Method Symplify\\(.*?)\\TypeAwareNodeFinder\:\:(findInstanceOf|findFirstInstanceOf)\(\) should return (.*?)#'

        # on purpose as the "abstract" is the keyword of method name :)
        -
            message: '#Class name starting with "Abstract" must have an `abstract` keyword#'
            path: packages/php-config-printer/src/ServiceOptionConverter/AbstractServiceOptionKeyYamlToPhpFactory.php

        # decoupling
        -
            message: '#Parameter argument on position 0 must use constant#'
            path: packages/php-config-printer/src/ExprResolver/StringExprResolver.php

        # to separate packages
        -
            message: '#Content of method "(.*?)\(\)" is duplicated\. Use unique content or service instead#'
            paths:
                - packages/rule-doc-generator/tests/Fixture/StaticFixtureUpdater.php

        # complex logic
        -
            message: '#Cognitive complexity for "Symplify\\PhpConfigPrinter\\NodeFactory\\ContainerConfiguratorReturnClosureFactory\:\:createStmtsFromCaseConverters\(\)" is 9, keep it under 8#'
            path: 'packages/php-config-printer/src/NodeFactory/ContainerConfiguratorReturnClosureFactory.php'

        # known
        - '#Parameter \#1 \$nodes of method PhpParser\\PrettyPrinterAbstract\:\:pCommaSeparatedMultiline\(\) expects array<PhpParser\\Node>, array<PhpParser\\Node\\Expr\\ArrayItem\|null> given#'
